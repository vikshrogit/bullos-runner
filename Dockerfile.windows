# escape=`
# ------------------------------
# ARGs
# ------------------------------
ARG BASE_IMAGE=mcr.microsoft.com/windows/servercore:ltsc2022
ARG RUNNER_VERSION=2.328.0
ARG IMAGE_VERSION=latest


# ------------------------------
# Base image
# ------------------------------
FROM ${BASE_IMAGE} AS base

ARG RUNNER_VERSION
ARG IMAGE_VERSION
ENV RUNNER_USER=runner `
    RUNNER_HOME=C:\runner `
    RUNNER_WORKDIR=C:\runner\_work `
    RUNNER_VERSION=${RUNNER_VERSION} `
    IMAGE_VERSION=${IMAGE_VERSION}

# ------------------------------
# Set PowerShell as default shell
# ------------------------------
SHELL ["powershell", "-Command", "$ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue';"]

# ------------------------------
# Install Chocolatey and packages
# ------------------------------
RUN Set-ExecutionPolicy Bypass -Scope Process -Force; `
    [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072; `
    iex ((New-Object System.Net.WebClient).DownloadString('https://community.chocolatey.org/install.ps1')); `
    choco feature enable -n allowGlobalConfirmation; `
    choco install -y git 7zip jq python

# ------------------------------
# Create runner user and work directory
# ------------------------------
RUN & {
    $runnerUser    = $env:RUNNER_USER;
    $runnerHome    = $env:RUNNER_HOME;
    $runnerWorkdir = $env:RUNNER_WORKDIR;

    if (-not (Get-LocalUser -Name $runnerUser -ErrorAction SilentlyContinue)) {
        $pw = ConvertTo-SecureString 'P@ssw0rd!' -AsPlainText -Force;
        New-LocalUser -Name $runnerUser -Password $pw -FullName 'GitHub Runner' -Description 'Self-hosted runner user';
    };

    $runnerPath = Join-Path $runnerHome $runnerWorkdir;
    if (-not (Test-Path $runnerPath)) {
        New-Item -ItemType Directory -Path $runnerPath | Out-Null;
    };
}

# RUN powershell -Command `
#     $runnerPath = Join-Path $env:RUNNER_HOME $env:RUNNER_WORKDIR `
#     if (-not (Test-Path $runnerPath)) { `
#         New-Item -ItemType Directory -Path $runnerPath | Out-Null `
#     }


# ------------------------------
# Download GitHub Actions Runner
# ------------------------------
RUN Invoke-WebRequest -UseBasicParsing -Uri "https://github.com/actions/runner/releases/download/v${RUNNER_VERSION}/actions-runner-win-x64-${RUNNER_VERSION}.zip" -OutFile "C:\runner.zip"; `
    Expand-Archive -Path "C:\runner.zip" -DestinationPath "C:\actions-runner"; `
    Remove-Item "C:\runner.zip"

# ------------------------------
# Copy entrypoint
# ------------------------------
COPY scripts/entrypoint.ps1 C:\actions-runner\entrypoint.ps1

# ------------------------------
# Set permissions
# ------------------------------
RUN icacls "C:\actions-runner" /grant ${RUNNER_USER}:(OI)(CI)F /T

# ------------------------------
# Volumes
# ------------------------------
VOLUME ["C:\\${RUNNER_USER}\\${RUNNER_WORKDIR}"]

# ------------------------------
# Labels
# ------------------------------
LABEL org.opencontainers.image.title="bullos-gh-runner-windows" `
      org.opencontainers.image.version="${IMAGE_VERSION}" `
      org.opencontainers.image.authors="VIKSHRO" `
      org.opencontainers.image.description="Secure GitHub Actions self-hosted runner for Windows Server Core"

# ------------------------------
# Switch to runner user
# ------------------------------
USER ${RUNNER_USER}
WORKDIR ${RUNNER_HOME}

# ------------------------------
# Entrypoint
# ------------------------------
ENTRYPOINT ["powershell", "C:\\actions-runner\\entrypoint.ps1"]
CMD ["run"]
